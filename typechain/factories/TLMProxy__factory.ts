/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TLMProxy } from "../TLMProxy";

export class TLMProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    tlm_: string,
    overrides?: Overrides
  ): Promise<TLMProxy> {
    return super.deploy(
      _controller,
      tlm_,
      overrides || {}
    ) as Promise<TLMProxy>;
  }
  getDeployTransaction(
    _controller: string,
    tlm_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, tlm_, overrides || {});
  }
  attach(address: string): TLMProxy {
    return super.attach(address) as TLMProxy;
  }
  connect(signer: Signer): TLMProxy__factory {
    return super.connect(signer) as TLMProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TLMProxy {
    return new Contract(address, _abi, signerOrProvider) as TLMProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "contract DssTlmAbstract",
        name: "tlm_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fyDai",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gemJoin",
        type: "address",
      },
    ],
    name: "SeriesRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "contract IFYDai",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "collateral",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fyDaiToBorrow",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "collateral",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fyDaiToBorrow",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "controllerSig",
        type: "bytes",
      },
    ],
    name: "borrowWithSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
    ],
    name: "fetch",
    outputs: [
      {
        internalType: "contract IFYDai",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "gemJoins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tlm",
    outputs: [
      {
        internalType: "contract DssTlmAbstract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tlmProxy",
    outputs: [
      {
        internalType: "contract TLMProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610db2380380610db28339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b811660805290821b1660a05230901b60c05260805160601c60a05160601c60c05160601c610d036100af6000398061077652806108605250806104035280610a995280610b1e5250806102e052806107fc5280610b645280610baa5250610d036000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063a0702d3a11610076578063bf4c1bce1161005b578063bf4c1bce146101f1578063dce881c9146101f9578063f77c4791146102d4576100a3565b8063a0702d3a1461018c578063b3b65f1614610194576100a3565b80632965d809146100a857806332ea8b7d146100cd5780634079d58e146101195780634b1066941461016f575b600080fd5b6100cb600480360360408110156100be57600080fd5b50803590602001356102dc565b005b6100f0600480360360408110156100e357600080fd5b50803590602001356106dd565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61013c6004803603604081101561012f57600080fd5b508035906020013561070d565b6040805173ffffffffffffffffffffffffffffffffffffffff938416815291909216602082015281519081900390910190f35b6100f06004803603602081101561018557600080fd5b503561074c565b6100f0610774565b6101df600480360360a08110156101aa57600080fd5b5080359060208101359060408101359073ffffffffffffffffffffffffffffffffffffffff6060820135169060800135610798565b60408051918252519081900360200190f35b6100f0610b1c565b6101df600480360360c081101561020f57600080fd5b81359160208101359160408201359173ffffffffffffffffffffffffffffffffffffffff606082013516916080820135919081019060c0810160a082013564010000000081111561025f57600080fd5b82018360208201111561027157600080fd5b8035906020019184600183028401116401000000008311171561029357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b40945050505050565b6100f0610ba8565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dc22cb6a846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561034f57600080fd5b505afa158015610363573d6000803e3d6000fd5b505050506040513d602081101561037957600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff81166103ff57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f536572696573206e6f7420666f756e6400000000000000000000000000000000604482015290519081900360640190fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d604081101561049b57600080fd5b5051905073ffffffffffffffffffffffffffffffffffffffff811661052157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496c6b206e6f7420666f756e6400000000000000000000000000000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16637bd2bea76040518163ffffffff1660e01b815260040160206040518083038186803b15801561057e57600080fd5b505afa158015610592573d6000803e3d6000fd5b505050506040513d60208110156105a857600080fd5b505173ffffffffffffffffffffffffffffffffffffffff161461062c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4d69736d61746368656420465944616920616e642047656d0000000000000000604482015290519081900360640190fd5b600084815260208181526040808320868452825280832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff8881169182179093556001855294839020805490911691861691821790558151938452918301919091528051859287927fc1db73ff639d32f7be943893477ac5c437a2aa5f121471d3703aba07941f77fc92918290030190a350505050565b600060208181529281526040808220909352908152205473ffffffffffffffffffffffffffffffffffffffff1681565b60009182526020828152604080842092845291815281832054600190915291205473ffffffffffffffffffffffffffffffffffffffff91821692911690565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b604080517f801d325f000000000000000000000000000000000000000000000000000000008152600481018790526024810186905233604482015230606482015260848101839052905160009173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169163801d325f9160a480820192869290919082900301818387803b15801561084357600080fd5b505af1158015610857573d6000803e3d6000fd5b505050506000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634079d58e88886040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156108d657600080fd5b505afa1580156108ea573d6000803e3d6000fd5b505050506040513d604081101561090057600080fd5b508051602090910151909250905073ffffffffffffffffffffffffffffffffffffffff821661099057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d69736d617463686564206d6174757269747920616e6420696c6b0000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b382866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a1757600080fd5b505af1158015610a2b573d6000803e3d6000fd5b505050506040513d6020811015610a4157600080fd5b5050604080517fcb8ec2a30000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff87811660248301526044820187905291517f00000000000000000000000000000000000000000000000000000000000000009092169163cb8ec2a3916064808201926020929091908290030181600087803b158015610ae457600080fd5b505af1158015610af8573d6000803e3d6000fd5b505050506040513d6020811015610b0e57600080fd5b505198975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b805160009015610b9057610b9073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168363ffffffff610bcc16565b610b9d8787878787610798565b979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000610bda84610cb2565b604080517f1a28ff050000000000000000000000000000000000000000000000000000000081523360048201523060248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff604482015260ff831660648201526084810185905260a481018490529051939650919450925073ffffffffffffffffffffffffffffffffffffffff871691631a28ff059160c48082019260009290919082900301818387803b158015610c9357600080fd5b505af1158015610ca7573d6000803e3d6000fd5b505050505050505050565b60208101516040820151606090920151909260009190911a9056fea2646970667358221220e69050fbac117c62ddf220da002d88da3a44515364440efaaaaaaa2a6a3d071164736f6c634300060a0033";
